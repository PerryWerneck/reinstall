
#---[ Library configuration ]------------------------------------------------------------

PACKAGE_NAME=@PACKAGE_NAME@
SONAME=@SONAME@

SOURCES= \
		$(wildcard core/source/*.cc) \
		$(wildcard ui/*.cc) \
		$(wildcard ui/dialogs/*.cc) \
		$(wildcard sources/*.cc) \
		$(wildcard builders/*.cc) \
		$(wildcard writers/*.cc) \
		$(wildcard fatfs/source/*.cc) \
		$(wildcard fatfs/source/*.c)	

TEST_SOURCES= \
		$(wildcard testprogram/*.cc)
	
#---[ Tools ]----------------------------------------------------------------------------

CXX=@CXX@
CC=@CC@
LD=@CXX@
LN_S=@LN_S@
MKDIR=@MKDIR_P@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
XGETTEXT=@XGETTEXT@
MSGCAT=@MSGCAT@
WINDRES=@WINDRES@
AR=@AR@
VALGRIND=@VALGRIND@
DLLTOOL=@DLLTOOL@

#---[ Paths ]----------------------------------------------------------------------------

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@
datarootdir=@datarootdir@
localedir=@localedir@
docdir=@docdir@
sysconfdir=/etc

OBJDIR=.obj
OBJDBG=$(OBJDIR)/Debug
OBJRLS=$(OBJDIR)/Release

BINDIR=.bin
BINDBG=$(BINDIR)/Debug
BINRLS=$(BINDIR)/Release

#---[ Rules ]----------------------------------------------------------------------------

CFLAGS= \
	@CFLAGS@ \
	-fPIC \
	-I../include \
	-I./fatfs/source \
	-DBUILD_DATE=`date +%Y%m%d` \
	@UDJAT_CFLAGS@ \
	@PUGIXML_CFLAGS@ \
	@ISOFS_CFLAGS@ \
	@JSON_CFLAGS@ \
	@DBUS_CFLAGS@ \
	@LIBSLP_CFLAGS@

CXXFLAGS= \
	@CXXFLAGS@ \
	-fPIC \
	-I../include \
	-I./fatfs/source \
	-DBUILD_DATE=`date +%Y%m%d` \
	@UDJAT_CFLAGS@ \
	@PUGIXML_CFLAGS@ \
	@ISOFS_CFLAGS@ \
	@JSON_CFLAGS@ \
	@DBUS_CFLAGS@ \
	@LIBSLP_CFLAGS@

LDFLAGS=\
	@LDFLAGS@

LIBS= \
	@LIBS@ \
	@LIBICONV@ \
	@UDJAT_LIBS@ \
	@PUGIXML_LIBS@ \
	@ISOFS_LIBS@ \
	@DBUS_LIBS@ \
	@JSON_LIBS@ \
	@DBUS_LIBS@ \
	@LIBSLP_LIBS@

#---[ Debug Rules ]----------------------------------------------------------------------

$(OBJDBG)/%.o: \
	%.cc

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CXXFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CXXFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ \
		-c $<

$(OBJDBG)/%.o: \
	%.c

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CC) \
		$(CFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CC) \
		$(CFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ \
		-c $<

$(OBJDBG)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) \
		$< \
		-O coff \
		-o $@

#---[ Release Rules ]--------------------------------------------------------------------

$(OBJRLS)/%.o: \
	%.cc
	
	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CXXFLAGS) \
		-DNDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CXXFLAGS) \
		-DNDEBUG=1 \
		-o $@ \
		-c $<

$(OBJRLS)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) $< -O coff -o $@

#---[ Release Targets ]------------------------------------------------------------------

all: \
	$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@

Release: \
	$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@


#---[ Install Targets ]------------------------------------------------------------------

#---[ Uninstall Targets ]----------------------------------------------------------------


#---[ Debug Targets ]--------------------------------------------------------------------

Debug: \
	$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@

$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@: \
	$(foreach SRC, $(basename $(TEST_SOURCES)), $(OBJDBG)/$(SRC).o) \
	$(BINDBG)/$(SONAME)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		-o $@ \
		$^ \
		-L$(BINDBG) \
		-Wl,-rpath,$(BINDBG) \
		$(LDFLAGS) \
		$(LIBS)

$(BINDBG)/$(SONAME): \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).o)

	@$(MKDIR) $(dir $@)
	@echo $< ...
	@$(LD) \
		@DLL_LDFLAGS@ \
		-o $@ \
		$(LDFLAGS) \
		$(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).o) \
		$(LIBS)

run: \
	$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@

ifeq ($(VALGRIND),no)

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@

else
	@touch valgrind.suppression

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(VALGRIND) --leak-check=full --track-origins=yes --gen-suppressions=all --suppressions=valgrind.suppression \
		$(BINDBG)/$(PACKAGE_NAME)@EXEEXT@
endif

#---[ Clean Targets ]--------------------------------------------------------------------

clean: \
	cleanDebug \
	cleanRelease

cleanDebug:

	@rm -fr $(OBJDBG)
	@rm -fr $(BINDBG)

cleanRelease:

	@rm -fr $(OBJRLS)
	@rm -fr $(BINRLS)

clean: \
	cleanDebug \
	cleanRelease


-include $(foreach SRC, $(basename $(SOURCES) $(TEST_SOURCES)), $(OBJDBG)/$(SRC).d)
-include $(foreach SRC, $(basename $(SOURCES) $(TEST_SOURCES)), $(OBJRLS)/$(SRC).d)


