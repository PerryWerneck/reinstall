
#---[ Library configuration ]------------------------------------------------------------

PACKAGE_NAME=@PACKAGE_NAME@
PRODUCT_NAME=@PRODUCT_NAME@
APPLICATION_ID=@PRODUCT_ID@.@PACKAGE_NAME@
LIBRARY_NAME="lib@PACKAGE_NAME@"
MODULES=@MODULES@
SONAME=@SONAME@

LIBRARY_SOURCES = \
	$(wildcard src/library/*.cc) \
	$(wildcard src/library/iso9660/*.cc) \
	$(wildcard src/library/action/*.cc) \
	$(wildcard src/library/dialogs/*.cc) \
	$(wildcard src/library/repository/*.cc) \
	$(wildcard src/library/source/*.cc) \
	$(wildcard src/library/writers/*.cc) \
	$(wildcard src/library/os/@OSNAME@/*.cc)

GUI_SOURCES= \
	$(wildcard src/gui/*.cc) \
	$(wildcard src/gui/dialogs/*.cc) \
	$(wildcard src/gui/widgets/*.cc) \
	$(wildcard src/gui/os/@OSNAME@/*.cc)

#---[ Tools ]----------------------------------------------------------------------------

CXX=@CXX@
LD=@CXX@
LN_S=@LN_S@
MKDIR=@MKDIR_P@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
XGETTEXT=@XGETTEXT@
MSGCAT=@MSGCAT@
WINDRES=@WINDRES@
AR=@AR@
VALGRIND=@VALGRIND@
DLLTOOL=@DLLTOOL@
INSTALL_DESKTOP=@INSTALL_DESKTOP@

#---[ Paths ]----------------------------------------------------------------------------

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@
datarootdir=@datarootdir@
localedir=@localedir@
docdir=@docdir@
sysconfdir=/etc

DLL_LDFLAGS=@DLL_LDFLAGS@

OBJDIR=.obj
OBJDBG=$(OBJDIR)/Debug
OBJRLS=$(OBJDIR)/Release

BINDIR=.bin
BINDBG=$(BINDIR)/Debug
BINRLS=$(BINDIR)/Release

POTDIR=.pot

#---[ Rules ]----------------------------------------------------------------------------

DEPENDS= \
	Makefile

CFLAGS= \
	-fPIC \
	@CXXFLAGS@ \
	-Isrc/include \
	-DBUILD_DATE=`date +%Y%m%d` \
	-DLOCALEDIR=$(localedir) \
	@UDJAT_CFLAGS@ \
	@PUGIXML_CFLAGS@ \
	@ISOFS_CFLAGS@ \
	@GTK_CFLAGS@ \
	@ZIPLIB_CFLAGS@ \
	@JSON_CFLAGS@ \
	@LIBSLP_CFLAGS@ \
	@FDISK_CFLAGS@

LDFLAGS=\
	@LDFLAGS@

LIBS= \
	@LIBS@ \
	@UDJAT_LIBS@ \
	@PUGIXML_LIBS@ \
	@GTK_LIBS@ \
	@ZIPLIB_LIBS@ \
	@JSON_LIBS@ \
	@LIBSLP_LIBS@ \
	@FDISK_CFLAGS@

#---[ Debug Rules ]----------------------------------------------------------------------

$(OBJDBG)/%.o: \
	%.cc \
	$(DEPENDS)

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CFLAGS) \
		-DDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CFLAGS) \
		-Wall -Wextra -fstack-check \
		-DDEBUG=1 \
		-o $@ \
		-c $<

$(OBJDBG)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) $< -O coff -o $@

#---[ Release Rules ]--------------------------------------------------------------------

$(OBJRLS)/%.o: \
	%.cc \
	$(DEPENDS)

	@echo $< ...
	@$(MKDIR) $(@D)

	@$(CXX) \
		$(CFLAGS) \
		-DNDEBUG=1 \
		-MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<

	@$(CXX) \
		$(CFLAGS) \
		-DNDEBUG=1 \
		-o $@ \
		-c $<

$(OBJRLS)/%.o: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(@D)
	@$(WINDRES) $< -O coff -o $@

$(POTDIR)/%.pot: \
	%.cc

	@echo $(notdir $@) ...
	@$(MKDIR) $(dir $@)
	@$(XGETTEXT) \
		--from-code=UTF-8 \
		--language=C \
		--keyword=_ \
		--keyword=N_ \
		--keyword=MSG_:2 \
		--output=$@ \
		$<
	@touch $@

$(POTDIR)/%.pot: \
	%.rc

	@echo $< ...
	@$(MKDIR) $(dir $@)
	@touch $@

install-%: \
	%/Makefile

	@$(MAKE) -C `dirname $<` DESTDIR=$(DESTDIR) install

install-module-%: \
	src/modules/%/Makefile

	@$(MAKE) -C `dirname $<` DESTDIR=$(DESTDIR) install

#---[ Release Targets ]------------------------------------------------------------------

all: \
	$(BINRLS)/$(PRODUCT_NAME)@EXEEXT@ \
	$(BINRLS)/$(SONAME) \
	$(foreach MODULE, $(MODULES), $(BINRLS)/modules/$(MODULE)@DLLEXT@) \
	locale/$(PACKAGE_NAME).pot

Release: \
	$(BINRLS)/$(PRODUCT_NAME)@EXEEXT@ \
	$(foreach MODULE, $(MODULES), $(BINRLS)/modules/$(MODULE)@DLLEXT@)

locale/$(PACKAGE_NAME).pot: \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES) $(ISOWRITER_SOURCES) $(NETINSTALL_SOURCES) $(ISOBUILDER_SOURCES) $(GRUB_SOURCES) $(GUI_SOURCES)), $(POTDIR)/$(SRC).pot)

	@rm -f $@
	@$(MKDIR) $(dir $@)
	@$(MSGCAT) --sort-output $^ > $@

locale: \
	locale/$(PACKAGE_NAME).pot

$(BINRLS)/$(PRODUCT_NAME)@EXEEXT@: \
	$(foreach SRC, $(basename $(GUI_SOURCES)), $(OBJRLS)/$(SRC).o) \
	$(BINRLS)/$(SONAME)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		-o $@ \
		$^ \
		-L$(BINRLS) \
		$(LDFLAGS) \
		$(LIBS)

$(BINRLS)/modules/%@DLLEXT@: \
	$(BINRLS)/$(SONAME) \
	src/modules/%/* \

	@$(MAKE) -C src/modules/$(notdir $(basename $@)) Release

$(BINRLS)/$(SONAME): \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES)), $(OBJRLS)/$(SRC).o)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		$(DLL_LDFLAGS) \
		-Wl,-soname,$(@F) \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		@ISOFS_LIBS@ \
		$(LIBS)

#---[ Install Targets ]------------------------------------------------------------------

install: \
	install-@OSNAME@ \
	install-locale \
	$(foreach MODULE, $(MODULES), install-module-$(MODULE)) \
	install-data

install-linux: \
	$(BINRLS)/$(PRODUCT_NAME)@EXEEXT@ \
	locale/$(PACKAGE_NAME).pot

	# Install library
	@$(MKDIR) \
		$(DESTDIR)$(libdir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(SONAME) \
		$(DESTDIR)$(libdir)/$(SONAME)

	# Install application.
	@$(MKDIR) \
		$(DESTDIR)$(bindir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/$(PRODUCT_NAME)@EXEEXT@ \
		$(DESTDIR)$(bindir)

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/applications
		
	@$(INSTALL_DATA) \
		sysconf/launcher.desktop \
		$(APPLICATION_ID).desktop

	@$(INSTALL_DESKTOP) \
		--mode 644 \
		--delete-original \
		--dir $(DESTDIR)$(datarootdir)/applications \
		$(APPLICATION_ID).desktop

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/icons

	@$(INSTALL_DATA) \
		icon.svg \
		$(DESTDIR)$(datarootdir)/icons/$(APPLICATION_ID).svg
		
	# Install tmpfiles.d
	@$(MKDIR) \
		$(DESTDIR)/etc/tmpfiles.d
	
	@$(INSTALL_DATA) \
		sysconf/tmpfiles.d \
		$(DESTDIR)/etc/tmpfiles.d/@PACKAGE_NAME@

install-windows: \
	$(BINRLS)/@SONAME@

	@$(MKDIR) \
		$(DESTDIR)$(bindir)

	@$(INSTALL_PROGRAM) \
		$(BINRLS)/@SONAME@ \
		$(DESTDIR)$(bindir)/@SONAME@
				
install-data:

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)
		
	@$(INSTALL_DATA) \
		stylesheet.css \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)

	@$(MKDIR) \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/templates
		
	@$(INSTALL_PROGRAM) \
		templates/grub2 \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/templates

	@$(INSTALL_DATA) \
		templates/grub.cfg \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/templates

	@$(INSTALL_DATA) \
		templates/isolinux.cfg \
		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/templates
		
	@$(MKDIR) \
		$(DESTDIR)/etc/$(PRODUCT_NAME).conf.d

	@$(INSTALL_DATA) \
		conf.d/0*.conf \
		$(DESTDIR)/etc/$(PRODUCT_NAME).conf.d

#---[ Debug Targets ]--------------------------------------------------------------------

Debug: \
	$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@ \
	$(BINDBG)/$(SONAME) \
	$(foreach MODULE, $(MODULES), $(BINDBG)/modules/$(MODULE)@DLLEXT@)

$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@: \
	$(foreach SRC, $(basename $(GUI_SOURCES)), $(OBJDBG)/$(SRC).o) \
	$(BINDBG)/$(SONAME)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		-o $@ \
		$^ \
		-L$(BINDBG) \
		-Wl,-rpath,$(BINDBG) \
		$(LDFLAGS) \
		$(LIBS)

$(BINDBG)/modules/%@DLLEXT@: \
	$(BINDBG)/$(SONAME) \
	src/modules/%/* \

	@$(MAKE) -C src/modules/$(notdir $(basename $@)) Debug

$(BINDBG)/$(SONAME): \
	$(foreach SRC, $(basename $(LIBRARY_SOURCES)), $(OBJDBG)/$(SRC).o)

	@$(MKDIR) $(@D)
	@echo $< ...
	@$(LD) \
		$(DLL_LDFLAGS) \
		-Wl,-soname,$(@F) \
		-o $@ \
		$(LDFLAGS) \
		$^ \
		@ISOFS_LIBS@ \
		$(LIBS)
		

inspect: \
	$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@

	@GTK_DEBUG=interactive $(BINDBG)/$(PRODUCT_NAME)@EXEEXT@

run: \
	$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@ \
	$(foreach MODULE, $(MODULES), $(BINDBG)/modules/$(MODULE)@DLLEXT@)

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@

memcheck: \
	$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@

ifeq ($(VALGRIND),no)

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@

else
	@touch valgrind.suppression

	@LD_LIBRARY_PATH=$(BINDBG) \
		$(VALGRIND) --leak-check=full --track-origins=yes --gen-suppressions=all --suppressions=valgrind.suppression \
		$(BINDBG)/$(PRODUCT_NAME)@EXEEXT@
endif

#---[ Clean Targets ]--------------------------------------------------------------------

clean: \
	cleanDebug \
	cleanRelease

cleanDebug:

	@rm -fr $(OBJDBG)
	@rm -fr $(BINDBG)

cleanRelease:

	@rm -fr $(OBJRLS)
	@rm -fr $(BINRLS)

clean: \
	cleanDebug \
	cleanRelease

-include $(foreach SRC, $(basename $(LIBRARY_SOURCES) $(GUI_SOURCES)), $(OBJDBG)/$(SRC).d)
-include $(foreach SRC, $(basename $(LIBRARY_SOURCES) $(GUI_SOURCES)), $(OBJRLS)/$(SRC).d)

